[% page_title = "Trends Reports" %]
[% head_tags = BLOCK %]
<link href="//unpkg.com/flatpickr@4/dist/flatpickr.min.css" rel="stylesheet">
[% END %]
[% INCLUDE admin/header_include.tt %]



<div id="app">

    <div class="row">
        <div class="col-md">
            <select class="form-control" v-model="filters.report_id" @change="fetch_report_data()">
              <option v-for="report in reports.objects" :value="report.properties.id">{{report.properties.name}}</option>
            </select>
        </div>
        <div class="col-md">
            <select class="form-control" v-model="filters.granularity" @change="update_granularity()">
              <option v-for="granularity in granularity_options" :value="granularity.name">{{granularity.label}}</option>
            </select>
        </div>
        <div class="col-md">
            <input type="number" class="form-control" v-model="filters.range" @change="fetch_report_data()">
        </div>
        <div class="col-md">
            <flat-pickr v-model="filters.start" class="form-control" @on-change="fetch_report_data()"></flat-pickr>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <tr>
                <th v-for="head in report.headings">{{head}}</th>
            </tr>
            <tr v-for="row in report.rows">
                <template v-for="(col,index) in row">
                    <th v-if="index == 0">{{col}}</th>
                    <td v-else>{{col}}</td>
                </template>
            </tr>
        </table>
    </div>

<button class="btn btn-success" @click="success()">Success</button>
<button class="btn btn-warning" @click="wing.warn('test')">warn</button>
<button class="btn btn-info" @click="wing.info('test')">info</button>
<button class="btn btn-danger" @click="wing.error('test')">error</button>



    <br>
    <a href="/admin/trends/reports/manage" class="btn btn-primary">Manage Reports</a>
</div>

[% foot_tags = BLOCK %]
<script src="//unpkg.com/flatpickr@4/dist/flatpickr.min.js"></script>
<script src="//unpkg.com/vue-flatpickr-component@7.0.0/dist/vue-flatpickr.min.js"></script>
<script type="text/javascript">
'use strict';

Vue.component('flat-pickr', VueFlatpickr);
new Vue({
    el:     '#app',
    data:   {
        range_defaults : {
            hourly : 24,
            daily : 15,
            monthly : 12,
            yearly : 5
        },
        granularity_options : [
            {
                name: "hourly", label : "Hourly",
            },
            {
                name: "daily", label : "Daily",
            },
            {
                name: "monthly", label : "Monthly",
            },
            {
                name: "yearly", label : "Yearly",
            },
        ],
        filters : { granularity: 'monthly', range : 12, start: (new Date()).toISOString().split('T')[0] },
        reports : wing.object_list({
            list_api : '/api/trendsreport',
            params : {_items_per_page : 100, _order_by : 'name'},
        }),
        report : [],
    },
    mounted() {
        var self = this;
        self.reports.all({on_all_done : function() {
            if (self.reports.objects.length > 0) {
                self.filters.report_id = self.reports.objects[0].properties.id;
                self.fetch_report_data();
            }
        }});
    },
    methods : {
        success() {
            wing.success('Item added to cart. <a href="/cart" class="btn btn-primary">View Cart</a>');

            const h = this.$createElement;
            
            wing.success('Some message.', { href : 'http://www.google.com' });

            wing.success(
                h('div', {}, [
                    'Item added to cart.',
                    h('a', { attrs : {href : '/cart'}, class : 'btn btn-primary'}, 'View Cart')
                ])
            );
        },
        fetch_report_data : _.debounce(function() { // some browsers fire events before updating the model, this gets around that
            const self = this;
            axios.get('/api/trends/'+self.filters.granularity+'/'+self.filters.report_id, { params: { start : self.filters.start, range : self.filters.range }})
            .then(function(response) {
                self.report = response.data.result;
            });
        },200),
        update_granularity() {
            this.filters.range = this.range_defaults[this.filters.granularity];
            this.fetch_report_data();
        },
    },
});
</script>
[% END %]
[% INCLUDE admin/footer_include.tt %]
