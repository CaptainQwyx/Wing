package [% project %]::Web::[%class_name%];

use Dancer ':syntax';
use Wing::Perl;
use Ouch;
use Wing;
use Wing::Web;

[% USE String %]
[% lower_class = String.new(class_name).lower %]

get '/[% lower_class %]' => sub {
    my $user = eval { get_user_by_session_id(); };
    my $vars = {};
    if ($user) {
        $vars->{current_user} = describe($user, current_user => $user);
    }
    template '[% lower_class %]/index', $vars;
};

get '/[% lower_class %]/:uri_part' => sub {
    my $current_user = eval { get_user_by_session_id(); };
    my $[% lower_class %] = Wing->db->resultset('[% class_name %]')->search({uri_part => param('uri_part')},{rows => 1})->single;
    unless (defined $[% lower_class %]) {
        ouch 440, '[% class_name %] not found.';
    }
    my $vars = {
        [% lower_class %]         => describe($[% lower_class %], current_user => $current_user, include_relationships => 1),
    };
    if ($current_user) {
        $vars->{current_user} = describe($current_user, current_user => $current_user);
    }
    template '[% lower_class %]/view', $vars;
};

get '/[% lower_class %]/:id/edit' => sub {
    my $current_user = get_user_by_session_id();
    my $[% lower_class %] = fetch_object('[% class_name %]');
    my $vars = {
        [% lower_class %]         => describe($[% lower_class %], current_user => $current_user, include_relationships => 1),
    };
    if ($current_user) {
        $vars->{current_user} = describe($current_user, current_user => $current_user);
    }
    template '[% lower_class %]/edit', $vars;
};


true;
