package [% project %]::DB::Result::[% class_name %];

use Moose;
use Wing::Perl;
use Ouch;
extends 'Wing::DB::Result';

[% USE String %]
[% lower_class = String.new(class_name).lower %]

with 'Wing::Role::Result::Field';
with 'Wing::Role::Result::UriPart';
with 'Wing::Role::Result::UserControlled';
with 'Wing::Role::Result::DateTimeField';

#with 'Wing::Role::Result::Child';
#with 'Wing::Role::Result::Parent';

#with 'Wing::Role::Result::PrivilegeControlled';
#__PACKAGE__->wing_controlled_by_privilege('supervisor');


__PACKAGE__->wing_fields(
  name => {
    dbic 		=> { data_type => 'varchar', size => 60, is_nullable => 0 },
    view		=> 'public',
    edit		=> 'required',
  },
  description => {
    dbic 		=> { data_type => 'mediumtext', is_nullable => 0 },
    view		=> 'public',
    edit		=> 'postable',
  },
  status => {
    dbic 		=> { data_type => 'varchar', size => 60, is_nullable => 0, default_value => 'pending' },
    view		=> 'admin',
    edit		=> 'admin',
    options     => [qw(pending open closed)],
    _options    => {
        pending => 'Pending',
        open    => 'Open',
        closed  => 'Closed',
    },
  is_cool => {
        dbic                => { data_type => 'tinyint', is_nullable => 0, default_value => 0 },
        view                => 'private',
        edit                => 'postable',
        options             => [0,1],
        _options            => { 0 => 'No', 1 => 'Yes' },
        skip_duplicate        => 1,
    },
  },
##Add more fields here
);

__PACKAGE__->wing_datetime_fields(
    start_date                  => {
        set_on_create       => 1,
        view                => 'public',
        edit                => 'postable',
        skip_duplicate        => 1,
    },
    end_date                  => {
        set_on_create       => 1,
        view                => 'public',
        edit                => 'postable',
        skip_duplicate        => 1,
    },
);

#__PACKAGE__->wing_children(
#    votes        => {
#        view            => 'public',
#        related_class   => '[% project %]::DB::Result::[% class_name %]Vote',
#        related_id      => '[% lower_class %]_id',
#    },
###Add children here
#);
#
#__PACKAGE__->wing_parents(
#    [% lower_class %]_container        => {
#        view            => 'public',
#        edit            => 'required',
#        related_class   => 'TGC::DB::Result::[% class_name %]Container',
#    },    
###Add parents here
#);


[% USE String %]

__PACKAGE__->wing_finalize_class( table_name => '[% String.new(class_name).lower.append('s') %]');

no Moose;
__PACKAGE__->meta->make_immutable(inline_constructor => 0);

